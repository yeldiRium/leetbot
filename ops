{"version":1,"ops":[{"type":6,"author":{"id":"cbda4c3e0f8cfde4151088caf421bf19e91d2a73"},"timestamp":1575994982,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMyMjU3NjMwOQ=="},"target":"f5ac1a15f9f771c758333031eaa096cfbfe170ffee07314b22750afafc281fb4","message":"Currently all data regarding a chat is lost when the bot is disabled for said chat.\n\nThis is due to the initial data modeling. I wanted it to be slim and to only persist what is absolutely necessary. Since storage space is not an issue and the chat is only actively used in one chat anyway, storing a bit more stuff is not an issue.\n\nTo store chat data across dis-/enables we need to:\n\n- [ ] Add a `disabled` field that defaults to `false` to the `chat` reducer\n- [ ] Move the handling of the `DISABLE_CHAT` action into the `chat` reducer and just set the flag instead of removing the chat object\n- [ ] Update all getters relating to \"active chats\" to respect the flag instead of the existence of chat objects (most notable `enabledChats`)\n- [ ] Write a migration that adds the `disabled` field to all chats in the store and sets it to `false`","files":null},{"type":6,"author":{"id":"cbda4c3e0f8cfde4151088caf421bf19e91d2a73"},"timestamp":1575998629,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMyMjYxOTA5OA=="},"target":"f5ac1a15f9f771c758333031eaa096cfbfe170ffee07314b22750afafc281fb4","message":"Currently all data regarding a chat is lost when the bot is disabled for said chat.\n\nThis is due to the initial data modeling. I wanted it to be slim and to only persist what is absolutely necessary. Since storage space is not an issue and the chat is only actively used in one chat anyway, storing a bit more stuff is not an issue.\n\nTo store chat data across dis-/enables we need to:\n\n- [ ] Add a `disabled` field that defaults to `false` to the `chat` reducer\n- [ ] Move the handling of the `DISABLE_CHAT` action into the `chat` reducer and just set the flag instead of removing the chat object\n- [ ] Update all getters relating to \"active chats\" to respect the flag instead of the existence of chat objects (most notable `enabledChats`)\n- [ ] Write a migration that adds the `disabled` field to all chats in the store and sets it to `false`\n\nCareful: Keeping chat objects in the store when they are disabled will impact the language handling, since now language is still persisted per chat, even if the chat is disabled. That might break tests and is intentional. See #83 for more on that.","files":null},{"type":6,"author":{"id":"cbda4c3e0f8cfde4151088caf421bf19e91d2a73"},"timestamp":1575998942,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMyMjYyMjM3MA=="},"target":"f5ac1a15f9f771c758333031eaa096cfbfe170ffee07314b22750afafc281fb4","message":"Currently all data regarding a chat is lost when the bot is disabled for said chat.\n\nThis is due to the initial data modeling. I wanted it to be slim and to only persist what is absolutely necessary. Since storage space is not an issue and the chat is only actively used in one chat anyway, storing a bit more stuff is not an issue.\n\nTo store chat data across dis-/enables we need to:\n\n- [ ] Add a `disabled` field that defaults to `false` to the `leetCounter` reducer\n- [ ] Move the handling of the `ENABLE_CHAT` and `DISABLE_CHAT` action into the `leetCounter` reducer and just set the flag instead of removing the chat object\n- [ ] Create the `chat` object in the /start command, so that there always is one\n- [ ] Update all getters relating to \"active chats\" to respect the flag instead of the existence of chat objects (most notable `enabledChats`)\n- [ ] Write a migration that adds the `disabled` field to all chats in the store and sets it to `false`\n\nCareful: Keeping chat objects in the store when they are disabled will impact the language handling, since now language is still persisted per chat, even if the chat is disabled. That might break tests and is intentional. See #83 for more on that.","files":null},{"type":6,"author":{"id":"cbda4c3e0f8cfde4151088caf421bf19e91d2a73"},"timestamp":1578182770,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzMjYxMDMzNg=="},"target":"f5ac1a15f9f771c758333031eaa096cfbfe170ffee07314b22750afafc281fb4","message":"Currently all data regarding a chat is lost when the bot is disabled for said chat.\n\nThis is due to the initial data modeling. I wanted it to be slim and to only persist what is absolutely necessary. Since storage space is not an issue and the chat is only actively used in one chat anyway, storing a bit more stuff is not an issue.\n\nTo store chat data across dis-/enables we need to:\n\n- [ ] Add a `disabled` field that defaults to `true` to the `leetCounter` reducer\n- [ ] Move the handling of the `ENABLE_CHAT` and `DISABLE_CHAT` action into the `leetCounter` reducer and just set the flag instead of removing the chat object\n- [ ] Create the `chat` object in the /start command, so that there always is one. This is why `disabled` has to default to `true`.\n- [ ] Update all getters relating to \"active chats\" to respect the flag instead of the existence of chat objects (most notable `enabledChats`)\n- [ ] Write a migration that adds the `disabled` field to all chats in the store and sets it to `false`\n\nCareful: Keeping chat objects in the store when they are disabled will impact the language handling, since now language is still persisted per chat, even if the chat is disabled. That might break tests and is intentional. See #83 for more on that.","files":null},{"type":5,"author":{"id":"cbda4c3e0f8cfde4151088caf421bf19e91d2a73"},"timestamp":1557844497,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIzNDAzNDIxMDQ="},"added":["enhancement"],"removed":[]},{"type":5,"author":{"id":"cbda4c3e0f8cfde4151088caf421bf19e91d2a73"},"timestamp":1557844497,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIzNDAzNDIxMDY="},"added":["leetbot"],"removed":[]},{"type":5,"author":{"id":"cbda4c3e0f8cfde4151088caf421bf19e91d2a73"},"timestamp":1570007455,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50MjY3OTg2MjYzOQ=="},"added":[],"removed":["leetbot"]},{"type":2,"author":{"id":"cbda4c3e0f8cfde4151088caf421bf19e91d2a73"},"timestamp":1570210663,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjY4ODE3MjA4MQ=="},"title":"Persist data when reenabling bot in chat","was":"Persist data when reenabling bot in chat"}]}