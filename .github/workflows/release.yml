name: Release

on:
  push:
    branches:
      - "main"

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Use Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Run QA
        run: |
          make qa
      - name: Get next version
        id: get_next_version
        uses: thenativeweb/get-next-version@2.5.0
      - name: Create new version
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        run: |
          git tag v${{steps.get_next_version.outputs.version}}
          git push origin v${{steps.get_next_version.outputs.version}}
      - name: Login to GitHub container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push (latest only)
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'false' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: yeldir/leetbot:latest
      - name: Build and push (latest and versioned)
        if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: yeldir/leetbot:latest,yeldir/leetbot:${{steps.get_next_version.outputs.version}}
